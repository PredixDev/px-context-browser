/*
 * Copyright (c) 2018, General Electric
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Settings
@import "px-defaults-design/_settings.defaults.scss";

// Generic
@import "px-normalize-design/_generic.normalize-mini.scss";
@import "px-box-sizing-design/_generic.box-sizing.scss";

// Base
@import "px-headings-design/_base.headings.scss";

// Component
:host {
  display: flex;
  height: calculateRem(30px);
  color: var(--px-context-browser-item-text-color, black);
  transition: background-color .2s ease-in-out;
}

.context-browser-item {
  flex: 1 1 auto;
  display: flex;
  align-items: center;
  cursor: pointer;
  min-width: 0;
}

:host([style-as-favorite]) {
  height: calculateRem(60px);
}

:host(:hover),
:host(:focus) {
  background-color: var(--px-context-browser-item-background-color--hover, whitesmoke);
}

:host([collapsed]:hover),
:host([collapsed]:focus) {
  background-color: transparent;
}
// In collapsed mode, show hover color on active (e.g. on pressed interaction)
:host([collapsed]:active) {
  background-color: var(--px-context-browser-item-background-color--hover, whitesmoke);
}

:host(:focus) {
  outline: none;
}

:host([selected]),
:host([selected][collapsed]) {
  background-color: var(--px-context-browser-item-background-color--selected, steelblue);
  color: var(--px-context-browser-item-text-color--selected, white);
}

.context-browser-text {
  display: block;
  width: 100%;
  flex: 1 1 auto;
  padding-left: calculateRem(15px);
  padding-right: calculateRem(15px);
  cursor: pointer;
  user-select: none;
  min-width: 0;
}

.context-browser-text__label {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.context-browser-text__breadcrumbs {
  color: var(--px-context-browser-item-breadcrumbs-color, gray);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

:host([selected]) .context-browser-text__breadcrumbs {
  color: var(--px-context-browser-item-breadcrumbs-color--selected, white);
}

.actions {
  margin-left: auto;
  opacity: 0;
  transition: opacity .2s ease-in-out;
  display: none;
  flex: 0 0 auto;
}
:host([style-as-favorite]) .actions {
  display: flex;
  opacity: 1;
}
:host(:hover) .actions,
:host(:focus) .actions,
:host([selected]) .actions {
  display: flex;
  opacity: 1;
}
:host([collapsed]:hover) .actions,
:host([collapsed]:focus) .actions,
:host([selected][collapsed]) .actions {
  display: none;
}
.action {
  width: calculateRem(20px);
  height: calculateRem(20px);
  margin-left: calculateRem(5px);
  margin-right: calculateRem(5px);
  cursor: pointer;
  color: var(--px-context-browser-icon-stroke, dimgray);
}
:host([selected]) .action {
  color: var(--px-context-browser-icon-stroke--item-selected, white);;
}
// For the default context browser, the last .action isn't the last-child because
// of dom-ifs, it's 3rd-to-last
.action:nth-last-child(3) {
  margin-right: calculateRem(15px);
}
// For the favorites context browser, there's only one .action
:host([style-as-favorite]) .action {
  margin-right: calculateRem(15px);
}
